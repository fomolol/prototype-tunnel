/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import * as THREE from 'three';
import { useFrame } from '@react-three/fiber';
import {
  useGLTF,
  useScroll,
  PerspectiveCamera,
  useAnimations,
} from '@react-three/drei';

export default function Tunnel(props) {
  const cameraRef = React.useRef();
  // This hook gives you offets, ranges and other useful things
  const scroll = useScroll();

  const group = useRef();
  const { nodes, materials, animations } = useGLTF(
    '/3d/tunneltest7_cam_action-transformed.glb',
  );
  const { actions } = useAnimations(animations, group);

  React.useEffect(
    () => void (actions['Action'].play().paused = true),
    [actions],
  );

  // To see the options available
  // React.useEffect(() => console.log('actions', actions), [actions]);

  useFrame((state, delta) => {
    const action = actions['Action'];
    // The offset is between 0 and 1, you can apply it to your models any way you like
    const offset = 1 - scroll.offset;
    action.time = THREE.MathUtils.damp(
      action.time,
      action.getClip().duration * offset,
      100,
      delta,
    );
    // cameraRef.current.position.set(
    //   Math.sin(offset) * -10,
    //   Math.atan(offset * Math.PI * 2) * 5,
    //   Math.cos((offset * Math.PI) / 3) * -10,
    // );
    // cameraRef.current.lookAt(0, 0, 0);

    console.log('scroll.offset', scroll.offset);
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group
        name="Camera"
        position={[0, 0, 28.03]}
        rotation={[Math.PI / 2, 0, 0]}
      >
        <PerspectiveCamera
          ref={cameraRef}
          makeDefault={true}
          far={100}
          near={0.1}
          fov={22.9}
          rotation={[-Math.PI / 2, 0, 0]}
        />
      </group>
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={materials['Material.001']}
        rotation={[Math.PI / 2, 0, 0]}
        scale={[1, 11.69, 1]}
      />
    </group>
  );
}

useGLTF.preload('/3d/tunneltest7_cam_action-transformed.glb');
